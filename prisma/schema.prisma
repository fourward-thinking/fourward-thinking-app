// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // for local development
  url      = env("DATABASE_URL")
  // for Vercel
  // url       = env("POSTGRES_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role   @default(USER)
}

enum Condition {
  excellent
  good
  fair
  poor
}

model Stuff {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Int
  condition Condition
  owner     String
}


model Session {
  id              Int        @id @default(autoincrement())
  sessionName     String
  date            DateTime
  time            DateTime
  applicableClass String
  sessionHostId   Int
  sessionHost     User       @relation("SessionHost", fields: [sessionHostId], references: [id])
  participants    Participant[]
}

model User {
  id              Int          @id @default(autoincrement())
  name            String
  email           String       @unique
  password        String
  sessionsHost    Session[]    @relation("SessionHost")
  participants    Participant[]
}

model Participant {
  id            Int      @id @default(autoincrement())
  userId        Int
  sessionId     Int
  participantType ParticipantType
  user          User     @relation(fields: [userId], references: [id])
  session       Session  @relation(fields: [sessionId], references: [id])
}

enum ParticipantType {
  TOOK
  TAKING
}